name: Terraform Workflow

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    name: 'Terraform Plan, Apply, or Destroy'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: eu-central-1

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.9.4

    - name: Print AWS credentials
      run: |
        echo "AWS credentials printed."
        echo $AWS_ACCESS_KEY_ID
        echo $AWS_SECRET_ACCESS_KEY

    - name: Clear Terraform Cache
      run: rm -rf ~/.terraform.d/plugin-cache .terraform plan.tfout
      working-directory: ./terraform

    - name: Terraform Init
      run: terraform init
      working-directory: ./terraform

    - name: Terraform Plan
      if: ${{ github.event.inputs.action == 'plan' || github.event.inputs.action == 'apply' }}
      run: terraform plan -out=plan.tfout
      working-directory: ./terraform

    - name: Terraform Apply
      if: ${{ github.event.inputs.action == 'apply' }}
      run: terraform apply -auto-approve plan.tfout
      working-directory: ./terraform

    - name: Terraform Destroy
      if: ${{ github.event.inputs.action == 'destroy' }}
      run: terraform destroy -auto-approve
      working-directory: ./terraform

    - name: Upload Terraform state
      if: ${{ github.event.inputs.action == 'apply' }}
      uses: actions/upload-artifact@v2
      with:
        name: terraform-state
        path: ./terraform/terraform.tfstate

    - name: Upload Terraform State Artifact
      if: ${{ github.event.inputs.action == 'apply' }}
      uses: actions/upload-artifact@v2
      with:
        name: terraform-state
        path: ./terraform/terraform.tfstate

    - name: Clean up
      if: always()
      run: rm -rf .terraform/ terraform.tfstate plan.tfout
      working-directory: ./terraform